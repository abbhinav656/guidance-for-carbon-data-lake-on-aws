# This 3 stage ci pipeline is purpose-built for cdk

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - validate
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - echo "installing node, npm, docker, aws-cli"
    - apk add --update nodejs npm
    - apk add --no-cache python3 py3-pip
    - apk add --update aws-cli
    - node --version
    - npm --version
    - python3 --version
    - pip3 --version
    - aws --version
    - docker --version
    - docker
    - echo "Logging into AWS Docker Public ECR to build lambda environment"
    - docker logout public.ecr.aws
    - echo "Installing typescript as dependency"
    - npm install typescript@latest -g
    - echo "succesfully installed typescript"
    - echo "Installing python as dependency"
    - echo "succesfully installed python"
    - echo "Installing all package dependencies"
    - npm install -g aws-cdk
    - npm ci
    - echo "succesfully installed package dependencies!"
    - echo "Building with npm..."
    - npm run build
    - echo "Build complete."
    - echo "Synthesizing CDK..."
    - cdk synth
    - echo "CDK synth complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  image: node:latest
  script:
    - echo "Installing typescript as dependency"
    - npm install typescript@latest -g
    - echo "succesfully installed typescript"
    - echo "Installing python as dependency"
    - npm i python@latest -g
    - echo "succesfully installed python"
    - echo "Installing all package dependencies"
    - npm install -g aws-cdk
    - npm ci
    - echo "succesfully installed package dependencies!"
    - echo "Building with npm..."
    - npm run build
    - echo "Build complete."
    - echo "Linting code... This will take about 10 seconds."
    - npm run lint
    - echo "No lint issues found."

cfn-guard-job:   # google about cfn-guard , its running security policies as code against CFN 
  stage: validate    # It can run at the same time as validation
  script:
    - echo " Running security validation checks on code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Simulating application deployment..."
    - echo "Application deployment placeholder passed"
