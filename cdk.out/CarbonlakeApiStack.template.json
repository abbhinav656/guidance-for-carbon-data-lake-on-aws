{
  "Resources": {
    "rawUploadBucket91C1D487": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/rawUploadBucket/Resource"
      }
    },
    "s3UploadLambdaServiceRoleBDEE28B7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/s3UploadLambda/ServiceRole/Resource"
      }
    },
    "s3UploadLambdaCDE813AA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "7ecc77636deefb31954ea2e6aadf6d2c361a2943535a678d65f46a8de5e1f503.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "s3UploadLambdaServiceRoleBDEE28B7",
            "Arn"
          ]
        },
        "Handler": "index.main",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "s3UploadLambdaServiceRoleBDEE28B7"
      ],
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/s3UploadLambda/Resource",
        "aws:asset:path": "asset.7ecc77636deefb31954ea2e6aadf6d2c361a2943535a678d65f46a8de5e1f503",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "carbonlakeApiF48C9005": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "REST API for CarbonLake",
        "Name": "carbonlakeApi"
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Resource"
      }
    },
    "carbonlakeApiCloudWatchRole11E64527": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/CloudWatchRole/Resource"
      }
    },
    "carbonlakeApiAccountB02C002A": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "carbonlakeApiCloudWatchRole11E64527",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "carbonlakeApiF48C9005"
      ],
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Account"
      }
    },
    "carbonlakeApiDeployment89AAC14763a1737cba76e20ebca7c325bf1e6d2c": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "carbonlakeApiANY4732CF0C",
        "carbonlakeApiinputALLOPTIONS2AE6A8E1",
        "carbonlakeApiinputALLA3A12544",
        "carbonlakeApiinputdataOPTIONS4A724E45",
        "carbonlakeApiinputdataPOSTBB0A84B1",
        "carbonlakeApiinputdata0240F1EA",
        "carbonlakeApiinputOPTIONS70A8F149",
        "carbonlakeApiinputEDC26218",
        "carbonlakeApiinputuploadOPTIONS5CCE3046",
        "carbonlakeApiinputuploadPOSTC864F26A",
        "carbonlakeApiinputupload4D10CA95",
        "carbonlakeApiOPTIONSD524D127"
      ],
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Deployment/Resource"
      }
    },
    "carbonlakeApiDeploymentStagedev40CFC725": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "DeploymentId": {
          "Ref": "carbonlakeApiDeployment89AAC14763a1737cba76e20ebca7c325bf1e6d2c"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "carbonlakeApiAccountB02C002A"
      ],
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/DeploymentStage.dev/Resource"
      }
    },
    "carbonlakeApiOPTIONSD524D127": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "carbonlakeApiF48C9005",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/OPTIONS/Resource"
      }
    },
    "carbonlakeApiANY4732CF0C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "carbonlakeApiF48C9005",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/ANY/Resource"
      }
    },
    "carbonlakeApiinputEDC26218": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "carbonlakeApiF48C9005",
            "RootResourceId"
          ]
        },
        "PathPart": "input",
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/Resource"
      }
    },
    "carbonlakeApiinputOPTIONS70A8F149": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "carbonlakeApiinputEDC26218"
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/OPTIONS/Resource"
      }
    },
    "carbonlakeApiinputALLA3A12544": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "carbonlakeApiinputEDC26218"
        },
        "PathPart": "ALL",
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/ALL/Resource"
      }
    },
    "carbonlakeApiinputALLOPTIONS2AE6A8E1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "carbonlakeApiinputALLA3A12544"
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/ALL/OPTIONS/Resource"
      }
    },
    "carbonlakeApiinputupload4D10CA95": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "carbonlakeApiinputEDC26218"
        },
        "PathPart": "upload",
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/upload/Resource"
      }
    },
    "carbonlakeApiinputuploadOPTIONS5CCE3046": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "carbonlakeApiinputupload4D10CA95"
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/upload/OPTIONS/Resource"
      }
    },
    "carbonlakeApiinputuploadPOSTApiPermissionCarbonlakeApiStackcarbonlakeApi5E4CE7ADPOSTinputuploadC52AA9F1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "s3UploadLambdaCDE813AA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "carbonlakeApiF48C9005"
              },
              "/",
              {
                "Ref": "carbonlakeApiDeploymentStagedev40CFC725"
              },
              "/POST/input/upload"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/upload/POST/ApiPermission.CarbonlakeApiStackcarbonlakeApi5E4CE7AD.POST..input.upload"
      }
    },
    "carbonlakeApiinputuploadPOSTApiPermissionTestCarbonlakeApiStackcarbonlakeApi5E4CE7ADPOSTinputuploadF7B9DF69": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "s3UploadLambdaCDE813AA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "carbonlakeApiF48C9005"
              },
              "/test-invoke-stage/POST/input/upload"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/upload/POST/ApiPermission.Test.CarbonlakeApiStackcarbonlakeApi5E4CE7AD.POST..input.upload"
      }
    },
    "carbonlakeApiinputuploadPOSTC864F26A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "carbonlakeApiinputupload4D10CA95"
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "cfnAuth"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "s3UploadLambdaCDE813AA",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/upload/POST/Resource"
      }
    },
    "carbonlakeApiinputdata0240F1EA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "carbonlakeApiinputEDC26218"
        },
        "PathPart": "data",
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/data/Resource"
      }
    },
    "carbonlakeApiinputdataOPTIONS4A724E45": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "carbonlakeApiinputdata0240F1EA"
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/data/OPTIONS/Resource"
      }
    },
    "carbonlakeApiinputdataPOSTApiPermissionCarbonlakeApiStackcarbonlakeApi5E4CE7ADPOSTinputdataB34842EC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "s3UploadLambdaCDE813AA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "carbonlakeApiF48C9005"
              },
              "/",
              {
                "Ref": "carbonlakeApiDeploymentStagedev40CFC725"
              },
              "/POST/input/data"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/data/POST/ApiPermission.CarbonlakeApiStackcarbonlakeApi5E4CE7AD.POST..input.data"
      }
    },
    "carbonlakeApiinputdataPOSTApiPermissionTestCarbonlakeApiStackcarbonlakeApi5E4CE7ADPOSTinputdata559CF734": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "s3UploadLambdaCDE813AA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "carbonlakeApiF48C9005"
              },
              "/test-invoke-stage/POST/input/data"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/data/POST/ApiPermission.Test.CarbonlakeApiStackcarbonlakeApi5E4CE7AD.POST..input.data"
      }
    },
    "carbonlakeApiinputdataPOSTBB0A84B1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "carbonlakeApiinputdata0240F1EA"
        },
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "cfnAuth"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "s3UploadLambdaCDE813AA",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeApi/Default/input/data/POST/Resource"
      }
    },
    "carbonlakeUserPool247DDD09": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UsernameAttributes": [
          "email"
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/carbonlakeUserPool/Resource"
      }
    },
    "cfnAuth": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "CarbonLakeCalculatorAPIAuthorizer",
        "RestApiId": {
          "Ref": "carbonlakeApiF48C9005"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "carbonlakeUserPool247DDD09",
              "Arn"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/cfnAuth"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QwU7DMBBEv6V3ZyEUJK5pETdEVcS5cp0lbJPYkXdNVaz8O3aaQsVpnj1j79h3UD7A7UIfuTB1W3S0h/gm2rQqbe0iLyGugmlR1PrDznSWlWYcVaf7fa0hPgdrhJzNsWveoO+JOa1GRbqHuHUdZiPrqHi508woDFUWpQdqtOBRn1ISWaqBpvAfVsa4YEU94dC5U492ana1Su2bacIZ0lEXvMFcV72gfLo6mzNd3HnIL1ch2Z6+0Y/KuMaSOIjvjH7jXJcDFx5HNTXPw8g22XoNMgT5f+Pa2Zpk+gfraoQD33yV91A+Qrk4MFHh06uoR9ie9Qf+woIsmQEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "CarbonlakeApiStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "carbonlakeApiEndpointBFDB33BC": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "carbonlakeApiF48C9005"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "carbonlakeApiDeploymentStagedev40CFC725"
            },
            "/"
          ]
        ]
      }
    },
    "apiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "carbonlakeApiF48C9005"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "carbonlakeApiDeploymentStagedev40CFC725"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}