# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - validate
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: node:latest
  script:
    - echo "Installing typescript as dependency"
    - npm install typescript@latest -g
    - echo "succesfully installed typescript"
    - echo "Installing python as dependency"
    - npm i python@latest -g
    - echo "succesfully installed python"
    - echo "Installing all package dependencies"
    - npm install -g aws-cdk
    - npm ci
    - echo "succesfully installed package dependencies!"
    - echo "Building with npm..."
    - npm run build
    - echo "Build complete."
    - echo "Synthesizing CDK..."
    - cdk synth
    - echo "CDK synth complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  image: node:latest
  script:
    - echo "Installing typescript as dependency"
    - npm install typescript@latest -g
    - echo "succesfully installed typescript"
    - echo "Installing python as dependency"
    - npm i python@latest -g
    - echo "succesfully installed python"
    - echo "Installing all package dependencies"
    - npm install -g aws-cdk
    - npm ci
    - echo "succesfully installed package dependencies!"
    - echo "Building with npm..."
    - npm run build
    - echo "Build complete."
    - echo "Linting code... This will take about 10 seconds."
    - npm run lint
    - echo "No lint issues found."

cfn-guard-job:   # google about cfn-guard , its running security policies as code against CFN 
  stage: validate    # It can run at the same time as validation
  script:
    - echo " Running security validation checks on code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Simulating application deployment..."
    - echo "Application deployment placeholder passed"
