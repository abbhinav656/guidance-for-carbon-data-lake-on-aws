"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CarbonlakeQuickstartStorageStack = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib"); // core constructs
const aws_cdk_lib_2 = require("aws-cdk-lib");
class CarbonlakeQuickstartStorageStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const carbonlakeProcessedDataBucket = new aws_cdk_lib_2.aws_s3.Bucket(this, 'carbonlakeProcessedDataBucket', {
            removalPolicy: aws_cdk_lib_1.RemovalPolicy.DESTROY,
        });
        const carbonlakeCuratedDataBucket = new aws_cdk_lib_2.aws_s3.Bucket(this, 'carbonlakeCuratedDataBucket', {
            removalPolicy: aws_cdk_lib_1.RemovalPolicy.DESTROY,
        });
        // Output bucket reference for nested stacks
        new aws_cdk_lib_1.CfnOutput(this, 'myBucketRef', {
            value: carbonlakeProcessedDataBucket.bucketName,
            description: 'The name of the processed data s3 bucket',
            exportName: 'carbonlakeProcessedDataBucket',
        });
    }
}
exports.CarbonlakeQuickstartStorageStack = CarbonlakeQuickstartStorageStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyYm9ubGFrZS1xcy1zdG9yYWdlLXN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2FyYm9ubGFrZS1xcy1zdG9yYWdlLXN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUErRSxDQUFpQixrQkFBa0I7QUFDbEgsNkNBQTJDO0FBRTNDLE1BQWEsZ0NBQWlDLFNBQVEsbUJBQUs7SUFDdkQsWUFBWSxLQUFVLEVBQUUsRUFBVSxFQUFFLEtBQWtCO1FBQ2xELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRXhCLE1BQU0sNkJBQTZCLEdBQUcsSUFBSSxvQkFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsK0JBQStCLEVBQUU7WUFDdkYsYUFBYSxFQUFFLDJCQUFhLENBQUMsT0FBTztTQUNyQyxDQUFDLENBQUM7UUFFTCxNQUFNLDJCQUEyQixHQUFHLElBQUksb0JBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLDZCQUE2QixFQUFFO1lBQ25GLGFBQWEsRUFBRSwyQkFBYSxDQUFDLE9BQU87U0FDckMsQ0FBQyxDQUFDO1FBRUwsNENBQTRDO1FBQzVDLElBQUksdUJBQVMsQ0FBQyxJQUFJLEVBQUUsYUFBYSxFQUFFO1lBQ25DLEtBQUssRUFBRSw2QkFBNkIsQ0FBQyxVQUFVO1lBQy9DLFdBQVcsRUFBRSwwQ0FBMEM7WUFDdkQsVUFBVSxFQUFFLCtCQUErQjtTQUMxQyxDQUFDLENBQUM7SUFFUCxDQUFDO0NBQ0o7QUFwQkQsNEVBb0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwLCBTdGFjaywgU3RhY2tQcm9wcywgQ2ZuT3V0cHV0LCBSZW1vdmFsUG9saWN5IH0gZnJvbSAnYXdzLWNkay1saWInOyAgICAgICAgICAgICAgICAgLy8gY29yZSBjb25zdHJ1Y3RzXG5pbXBvcnQgeyBhd3NfczMgYXMgczMgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5cbmV4cG9ydCBjbGFzcyBDYXJib25sYWtlUXVpY2tzdGFydFN0b3JhZ2VTdGFjayBleHRlbmRzIFN0YWNrIHtcbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQXBwLCBpZDogc3RyaW5nLCBwcm9wcz86IFN0YWNrUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG5cbiAgICAgICAgY29uc3QgY2FyYm9ubGFrZVByb2Nlc3NlZERhdGFCdWNrZXQgPSBuZXcgczMuQnVja2V0KHRoaXMsICdjYXJib25sYWtlUHJvY2Vzc2VkRGF0YUJ1Y2tldCcsIHtcbiAgICAgICAgICAgIHJlbW92YWxQb2xpY3k6IFJlbW92YWxQb2xpY3kuREVTVFJPWSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGNhcmJvbmxha2VDdXJhdGVkRGF0YUJ1Y2tldCA9IG5ldyBzMy5CdWNrZXQodGhpcywgJ2NhcmJvbmxha2VDdXJhdGVkRGF0YUJ1Y2tldCcsIHtcbiAgICAgICAgICAgIHJlbW92YWxQb2xpY3k6IFJlbW92YWxQb2xpY3kuREVTVFJPWSxcbiAgICAgICAgICB9KTtcbiAgICBcbiAgICAgICAgLy8gT3V0cHV0IGJ1Y2tldCByZWZlcmVuY2UgZm9yIG5lc3RlZCBzdGFja3NcbiAgICAgICAgbmV3IENmbk91dHB1dCh0aGlzLCAnbXlCdWNrZXRSZWYnLCB7XG4gICAgICAgIHZhbHVlOiBjYXJib25sYWtlUHJvY2Vzc2VkRGF0YUJ1Y2tldC5idWNrZXROYW1lLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSBuYW1lIG9mIHRoZSBwcm9jZXNzZWQgZGF0YSBzMyBidWNrZXQnLFxuICAgICAgICBleHBvcnROYW1lOiAnY2FyYm9ubGFrZVByb2Nlc3NlZERhdGFCdWNrZXQnLFxuICAgICAgICB9KTtcbiAgICBcbiAgICB9XG59Il19