# This 3 stage ci pipeline is purpose-built for cdk

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - validate
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: public.ecr.aws/amazonlinux/amazonlinux:latest
  services:
    - docker:dind
  script:
    - echo "installing node and npm"
    - yum -y install curl
    - curl -sL https://rpm.nodesource.com/setup_16.x | bash -
    - yum install -y nodejs
    - yum install -y python3
    - yum install -y awscli
    - node --version
    - npm --version
    - python3 --version
    - aws --version
    - echo "Logging into AWS Docker Public ECR to build lambda environment"
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
    - docker run -d -p 3000:3000
    - echo "Installing typescript as dependency"
    - npm install typescript@latest -g
    - echo "succesfully installed typescript"
    - echo "Installing python as dependency"
    - echo "succesfully installed python"
    - echo "Installing all package dependencies"
    - npm install -g aws-cdk
    - npm ci
    - echo "succesfully installed package dependencies!"
    - echo "Building with npm..."
    - npm run build
    - echo "Build complete."
    - echo "Synthesizing CDK..."
    - cdk synth
    - echo "CDK synth complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  image: node:latest
  script:
    - echo "Installing typescript as dependency"
    - npm install typescript@latest -g
    - echo "succesfully installed typescript"
    - echo "Installing python as dependency"
    - npm i python@latest -g
    - echo "succesfully installed python"
    - echo "Installing all package dependencies"
    - npm install -g aws-cdk
    - npm ci
    - echo "succesfully installed package dependencies!"
    - echo "Building with npm..."
    - npm run build
    - echo "Build complete."
    - echo "Linting code... This will take about 10 seconds."
    - npm run lint
    - echo "No lint issues found."

cfn-guard-job:   # google about cfn-guard , its running security policies as code against CFN 
  stage: validate    # It can run at the same time as validation
  script:
    - echo " Running security validation checks on code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Simulating application deployment..."
    - echo "Application deployment placeholder passed"
